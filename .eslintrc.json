{
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": [
    "node_modules/*",
    "**/dist/*"
  ],
  "globals": {
    "$localize": true
  },
  "env": {
    "browser": true,
    "node": true
  },
  "rules": {
    "@typescript-eslint/array-type": "warn",
    "@typescript-eslint/member-delimiter-style": "warn",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/explicit-member-accessibility": [
      "warn",
      {
        "accessibility": "explicit",
        "overrides": {
          "constructors": "no-public"
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "array-bracket-newline": [
      "warn",
      {
        "minItems": 2
      }
    ],
    "array-element-newline": [
      "warn",
      {
        "minItems": 2
      }
    ],
    "arrow-body-style": [
      "warn",
      "as-needed"
    ],
    "brace-style": [
      "warn",
      "stroustrup",
      {
        "allowSingleLine": true
      }
    ],
    "comma-dangle": [
      "warn",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline"
      }
    ],
    "default-case": "warn",
    "function-paren-newline": [
      "warn",
      "consistent"
    ],
    "id-denylist": [
      "error",
      "_"
    ],
    "lines-between-class-members": [
      "warn",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "no-case-declarations": "off",
    "no-confusing-arrow": "warn",
    "no-console": "warn",
    "no-empty-function": [
      "warn",
      {
        "allow": [
          "arrowFunctions",
          "functions",
          "methods",
          "constructors"
        ]
      }
    ],
    "no-multiple-empty-lines": [
      "warn",
      {
        "max": 1,
        "maxBOF": 1,
        "maxEOF": 1
      }
    ],
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-else-return": "warn",
    "no-useless-escape": "off",
    "object-curly-newline": [
      "warn",
      {
        "multiline": true
      }
    ],
    "object-property-newline": "warn",
    "object-shorthand": "warn",
    "padded-blocks": [
      "warn",
      {
        "classes": "always"
      }
    ],
    "padding-line-between-statements": [
      "warn",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "block"
      },
      {
        "blankLine": "always",
        "prev": "block",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "block-like",
        "next": "*"
      }
    ],
    "prefer-const": "warn",
    "prefer-template": "warn",
    "quotes": [
      "warn",
      "single",
      {
        "avoidEscape": true
      }
    ],
    "quote-props": [
      "warn",
      "as-needed"
    ],
    "semi": "warn",
    "space-in-parens": "warn",
    "template-curly-spacing": "warn"
  }
}
